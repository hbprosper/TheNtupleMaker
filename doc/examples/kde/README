KERNEL DENSITY ESTIMATION

	Harrison B. Prosper,	
	Oct. 28 - Nov. 6, 2009 
	Panjab University, Chandigarh, India


(A) Introduction

	Kernel density estimation (KDE) is a general non-parametric method
to estimate n-dimensional probability densities. The basic idea is to
place a kernel function (typically, a diagonal n-dimensional Gaussian)
at each of N points sampled from the density to be estimated.  In the
simplest method, the kernel function located at each point has exactly
the same shape. This is the method implemented in the KDE class (see
KDE.hpp and KDE.cpp).

	The KDE is given by

	f(X) = (1/N) Sum_i=1^N K(X,Y_i),								(1)

where K(X,Y) is the kernel function, Y_i is the ith point in the
n-dimensional space and X is the point at which an estimate of the
density is needed. The heuristic behind Eq.(1) is the following. We
arrange for K(X,Y) to get narrower as N goes to infinity. Therefore,
in this limit, K(X,Y) becomes delta(X-Y) and we can write Eq.(1) as

	f(X) = Integral K(X,Y) p(Y) dY,
		 = Integral delta(X-Y) p(Y) dY,
		 = p(X).

The KDE recovers the true density as more and more points are used
in the sum in Eq.(1).


(B) KDE Class

	The KDE class uses the kernel

	K(X,Y) = Prod_j=1^n Gaussian(x_j, y_j, h_j),					(2)

where

	X	= (x_1,...x_n),
	Y	= (y_1,...y_n), and
	Gaussian(x, y, h) = exp(-0.5*(x-y)/h**2)/h*sqrt(2*pi).

The parameter h is called the bandwidth, of which there are n in
Eq.(2), one for each dimension.  The bandwidths are free parameters
that must be chosen appropriately.  Choosing them well is critically
important to the performance of a KDE. If the bandwidths are too
small, the estimate will be very noisy; if they are too large, the
estimate will be too smooth. In the KDE class, some default values for
these bandwidths are used. However, better choices for these
parameters can be arrived at by passing 1-D histograms - one for each
dimension - to the KDE object and then invoking its optimize method.

	For each histogram, the optimize method computes the chi-squared
between this histogram and another computed using the current KDE
estimate. The bandwidths are adjusted so as to minimize a simple
function of the chi-squared/degree-of-freedom (chi**2/nd), averaged
over the n 1-D histograms. The KDE class minimizes the function

	g(h) = [1-chi**2/nd]**2. 

The motivation for this choice is that a good fit - one that neither
over-fits nor under-fits - should yield a chi**2/nd = 1.


(C) Example

	In this example, we model the 3-D distribution of jet data x =
(pt, eta, phi) using some of the data in the file jetdata.dat. After
setting up Root, the creation of the KDE is done with the command

	root -l build.C

If successful, this should:

	1. run Minuit to find better choices for the 3 bandwidths
	2. create the figures
			fig_pt.gif
			fig_eta.gif
			fig_phi.gif

	3. create the self-contained c++ source file
			jetdata.cpp

Next, quit Root and invoke

	root -l plot.C

to check that jetdata.cpp has been created correctly. 
If successful, this should:

	1. compile and link jetdata.cpp
	2. create the figures
			fig_pt_KDE.gif
			fig_eta_KDE.gif
			fig_phi_KDE.gif

These figures should be identical to the previous ones.
	 

